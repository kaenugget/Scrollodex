export declare const list: import("convex/server").RegisteredQuery<"public", {
    search?: string | undefined;
    tags?: string[] | undefined;
    company?: string | undefined;
    location?: string | undefined;
    ownerId: import("convex/values").GenericId<"users">;
}, Promise<{
    _id: import("convex/values").GenericId<"contacts">;
    _creationTime: number;
    role?: string | undefined;
    birthday?: string | undefined;
    company?: string | undefined;
    location?: string | undefined;
    connectedUserId?: import("convex/values").GenericId<"users"> | undefined;
    isDynamicContact?: boolean | undefined;
    lastSyncedAt?: number | undefined;
    petData?: {
        color?: string | undefined;
        pattern?: string | undefined;
        petType?: string | undefined;
        petName?: string | undefined;
        level?: number | undefined;
        happiness?: number | undefined;
        accessory?: string | undefined;
        happyImageUrl?: string | undefined;
        neutralImageUrl?: string | undefined;
        sadImageUrl?: string | undefined;
        excitedImageUrl?: string | undefined;
        happyVideoUrl?: string | undefined;
        neutralVideoUrl?: string | undefined;
        sadVideoUrl?: string | undefined;
        excitedVideoUrl?: string | undefined;
        templateId?: string | undefined;
        generatedAt?: number | undefined;
        lastUpdated?: number | undefined;
        hatchedAt?: number | undefined;
        regeneratedAt?: number | undefined;
        evolutionTokens?: number | undefined;
        totalEvolutions?: number | undefined;
        lastEvolutionAt?: number | undefined;
        videoGenerationStatus?: string | undefined;
        videoGenerationStartedAt?: number | undefined;
        videoGenerationCompletedAt?: number | undefined;
        videoGenerationError?: string | undefined;
    } | undefined;
    name: string;
    ownerId: import("convex/values").GenericId<"users">;
    emails: string[];
    phones: string[];
    tags: string[];
    notes: string[];
    lastInteractionAt: number;
    pinned: boolean;
}[]>>;
export declare const get: import("convex/server").RegisteredQuery<"public", {
    contactId: import("convex/values").GenericId<"contacts">;
}, Promise<{
    _id: import("convex/values").GenericId<"contacts">;
    _creationTime: number;
    role?: string | undefined;
    birthday?: string | undefined;
    company?: string | undefined;
    location?: string | undefined;
    connectedUserId?: import("convex/values").GenericId<"users"> | undefined;
    isDynamicContact?: boolean | undefined;
    lastSyncedAt?: number | undefined;
    petData?: {
        color?: string | undefined;
        pattern?: string | undefined;
        petType?: string | undefined;
        petName?: string | undefined;
        level?: number | undefined;
        happiness?: number | undefined;
        accessory?: string | undefined;
        happyImageUrl?: string | undefined;
        neutralImageUrl?: string | undefined;
        sadImageUrl?: string | undefined;
        excitedImageUrl?: string | undefined;
        happyVideoUrl?: string | undefined;
        neutralVideoUrl?: string | undefined;
        sadVideoUrl?: string | undefined;
        excitedVideoUrl?: string | undefined;
        templateId?: string | undefined;
        generatedAt?: number | undefined;
        lastUpdated?: number | undefined;
        hatchedAt?: number | undefined;
        regeneratedAt?: number | undefined;
        evolutionTokens?: number | undefined;
        totalEvolutions?: number | undefined;
        lastEvolutionAt?: number | undefined;
        videoGenerationStatus?: string | undefined;
        videoGenerationStartedAt?: number | undefined;
        videoGenerationCompletedAt?: number | undefined;
        videoGenerationError?: string | undefined;
    } | undefined;
    name: string;
    ownerId: import("convex/values").GenericId<"users">;
    emails: string[];
    phones: string[];
    tags: string[];
    notes: string[];
    lastInteractionAt: number;
    pinned: boolean;
} | null>>;
export declare const upsert: import("convex/server").RegisteredMutation<"public", {
    id?: import("convex/values").GenericId<"contacts"> | undefined;
    role?: string | undefined;
    birthday?: string | undefined;
    company?: string | undefined;
    location?: string | undefined;
    name: string;
    ownerId: import("convex/values").GenericId<"users">;
    emails: string[];
    phones: string[];
    tags: string[];
    notes: string[];
    lastInteractionAt: number;
    pinned: boolean;
}, Promise<import("convex/values").GenericId<"contacts">>>;
export declare const pin: import("convex/server").RegisteredMutation<"public", {
    pinned: boolean;
    contactId: import("convex/values").GenericId<"contacts">;
}, Promise<void>>;
export declare const deleteContact: import("convex/server").RegisteredMutation<"public", {
    contactId: import("convex/values").GenericId<"contacts">;
}, Promise<void>>;
export declare const bump: import("convex/server").RegisteredMutation<"public", {
    contactId: import("convex/values").GenericId<"contacts">;
}, Promise<void>>;
export declare const syncAllDynamicContacts: import("convex/server").RegisteredMutation<"public", {
    ownerId: import("convex/values").GenericId<"users">;
}, Promise<{
    synced: number;
}>>;
export declare const getDynamicContactsNeedingSync: import("convex/server").RegisteredQuery<"public", {
    ownerId: import("convex/values").GenericId<"users">;
}, Promise<{
    _id: import("convex/values").GenericId<"contacts">;
    _creationTime: number;
    role?: string | undefined;
    birthday?: string | undefined;
    company?: string | undefined;
    location?: string | undefined;
    connectedUserId?: import("convex/values").GenericId<"users"> | undefined;
    isDynamicContact?: boolean | undefined;
    lastSyncedAt?: number | undefined;
    petData?: {
        color?: string | undefined;
        pattern?: string | undefined;
        petType?: string | undefined;
        petName?: string | undefined;
        level?: number | undefined;
        happiness?: number | undefined;
        accessory?: string | undefined;
        happyImageUrl?: string | undefined;
        neutralImageUrl?: string | undefined;
        sadImageUrl?: string | undefined;
        excitedImageUrl?: string | undefined;
        happyVideoUrl?: string | undefined;
        neutralVideoUrl?: string | undefined;
        sadVideoUrl?: string | undefined;
        excitedVideoUrl?: string | undefined;
        templateId?: string | undefined;
        generatedAt?: number | undefined;
        lastUpdated?: number | undefined;
        hatchedAt?: number | undefined;
        regeneratedAt?: number | undefined;
        evolutionTokens?: number | undefined;
        totalEvolutions?: number | undefined;
        lastEvolutionAt?: number | undefined;
        videoGenerationStatus?: string | undefined;
        videoGenerationStartedAt?: number | undefined;
        videoGenerationCompletedAt?: number | undefined;
        videoGenerationError?: string | undefined;
    } | undefined;
    name: string;
    ownerId: import("convex/values").GenericId<"users">;
    emails: string[];
    phones: string[];
    tags: string[];
    notes: string[];
    lastInteractionAt: number;
    pinned: boolean;
}[]>>;
//# sourceMappingURL=contacts.d.ts.map